stages:
- name: build
- name: deploy
  if: branch = master AND type = push
- name: release
  if: branch = master AND type = push

jobs:
  include:

  - stage: build
    name: "Build Backend"
    language: rust
    rust: nightly
    before_install:
    - cd WIS/backend

  - stage: build
    name: "Build Frontend"
    language: node_js
    before_install:
    - cd WIS/web
    script:
    - npm build

  - stage: deploy
    name: "Deploy Backend Docker image"
    services: docker
    before_script:
    - cd WIS/backend
    script:
    - docker build -t registry.heroku.com/wis-backend/web --build-arg BUILD_VERSION="Commit $TRAVIS_COMMIT on branch '$TRAVIS_BRANCH'" .
    before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login --username=_ --password-stdin registry.heroku.com
    deploy:
      provider: script
      script: docker push registry.heroku.com/wis-backend/web
      
  - stage: deploy
    name: "Deploy Frontend Docker image"
    services: docker
    before_script:
    - cd WIS/web
    script:
    - docker build -t registry.heroku.com/wis-frontend/web --build-arg BUILD_VERSION="Commit $TRAVIS_COMMIT on branch '$TRAVIS_BRANCH'" .
    before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login --username=_ --password-stdin registry.heroku.com
    deploy:
      provider: script
      script: docker push registry.heroku.com/wis-frontend/web

  - stage: release
    name: "Releasing images to Heroku"
    addons:
      apt:
        sources:
          - heroku
    script:
    - heroku container:release web --app wis-backend
    - heroku container:release web --app wis-frontend
